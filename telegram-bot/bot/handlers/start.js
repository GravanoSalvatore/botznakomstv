// const admin = require('firebase-admin');

// module.exports = (bot, db) => {
//   // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ (–æ—Å—Ç–∞–≤–ª—è–µ–º –≤–∞—à –≤–∞—Ä–∏–∞–Ω—Ç)
//   const checkSubscription = async (userId) => {
//     try {
//       const subRef = db.collection('subscriptions').doc(userId.toString());
//       const doc = await subRef.get();

//       if (!doc.exists) return false;

//       const subData = doc.data();

//       if (subData.subscriptionType === 'forever' && subData.isActive) {
//         return {
//           active: true,
//           type: 'forever',
//           message: 'üéâ –£ –≤–∞—Å –±–µ—Å—Å—Ä–æ—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞!'
//         };
//       }

//       if (subData.endDate && subData.endDate.toDate() > new Date() && subData.isActive) {
//         return {
//           active: true,
//           type: subData.subscriptionType,
//           endDate: subData.endDate.toDate(),
//           message: `‚úÖ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ: ${subData.endDate.toDate().toLocaleString()}`
//         };
//       }

//       return false;
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏:', error);
//       return false;
//     }
//   };

//   // 2. –ö–æ–º–∞–Ω–¥–∞ /start —Å –∫–Ω–æ–ø–∫–∞–º–∏ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
//   bot.start(async (ctx) => {
//     const userId = ctx.from.id;
//     const subscription = await checkSubscription(userId);

//     try {
//       await ctx.replyWithPhoto(
//         {
//           url: 'https://st4.depositphotos.com/2944823/21275/i/450/depositphotos_212755884-stock-photo-fashion-outdoor-photo-group-beautiful.jpg',
//           filename: 'welcome.jpg'
//         },
//         {
//           caption: `üëã<b> –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}!
// –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤ üÖøüÖ¥üÖ∞üÖ≤üÖ¥üíãüÜàüÖæüÜÑüÜÅü•ïüÖ∂üÜÑüÖΩ</b>
// <em>–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥—ë—à—å –∫–∞—Ç–∞–ª–æ–≥ –∞–Ω–∫–µ—Ç —Å–æ –≤—Å–µ–≥–æ –º–∏—Ä–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è, —Ñ–ª–∏—Ä—Ç–∞ –∏ —Å–µ—Ä—å—ë–∑–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π.
// üéâ –ö–∞—Ç–∞–ª–æ–≥ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî –≤—Å–µ–≥–¥–∞ —Å–≤–µ–∂–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏!
// –ù–∞—á–Ω–∏ –ø–æ–∏—Å–∫ –∏–ª–∏ —Ä–∞–∑–º–µ—Å—Ç–∏ —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, —Ç–≤–æ—è –≤—Ç–æ—Ä–∞—è –ø–æ–ª–æ–≤–∏–Ω–∫–∞ —É–∂–µ –∑–¥–µ—Å—å!</em>
// <b>‚ö†üö® –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ —Ç–µ–±–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 18+‚ùó</b>
// ${subscription ? `\n\n${subscription.message}` : ''}`,
//           parse_mode: 'HTML',
//           reply_markup: {
//             inline_keyboard: [
//               [{ text: 'üë©‚Äçü¶∞ –ê–Ω–∫–µ—Ç—ã PeaceYourGun ü•ï', callback_data: 'show_profiles' }],
//               [{ text: 'üåê –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ PeaceYourGun ü•ï', url: process.env.WEBAPP_URL }],
//               [{ text: 'üî• –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –¥–µ–Ω—å (1üåü)', callback_data: 'buy_1day' }],
//               [{ text: '‚ù§Ô∏è –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –º–µ—Å—è—Ü (2000üåü)', callback_data: 'buy_1month' }],
//               [{ text: 'üí´ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–≤—Å–µ–≥–¥–∞ (10000üåü)', callback_data: 'buy_forever' }]
//             ]
//           }
//         }
//       );
//     } catch (e) {
//       console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ:', e);
//       await ctx.reply(`üëã<b> –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}!
// –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤</b> +
// <b>–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥—ë—à—å –∫–∞—Ç–∞–ª–æ–≥ –∞–Ω–∫–µ—Ç —Å–æ –≤—Å–µ–≥–æ –º–∏—Ä–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è, —Ñ–ª–∏—Ä—Ç–∞ –∏ —Å–µ—Ä—å—ë–∑–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π.
// üéâ –ö–∞—Ç–∞–ª–æ–≥ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî –≤—Å–µ–≥–¥–∞ —Å–≤–µ–∂–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏!
// –ù–∞—á–Ω–∏ –ø–æ–∏—Å–∫ –∏–ª–∏ —Ä–∞–∑–º–µ—Å—Ç–∏ —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, —Ç–≤–æ—è –≤—Ç–æ—Ä–∞—è –ø–æ–ª–æ–≤–∏–Ω–∫–∞ —É–∂–µ –∑–¥–µ—Å—å!
// ‚ö† –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ —Ç–µ–±–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 18+</b>
// ${subscription ? `\n\n${subscription.message}` : ''}`, {
//         parse_mode: 'HTML',
//         reply_markup: {
//           inline_keyboard: [
//             [{ text: 'üë©‚Äçü¶∞ –ê–Ω–∫–µ—Ç—ã PeaceYourGun ü•ï', callback_data: 'show_profiles' }],
//             [{ text: 'üåê –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ PeaceYourGun ü•ï', url: process.env.WEBAPP_URL }],
//             [{ text: 'üî• –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –¥–µ–Ω—å (1üåü)', callback_data: 'buy_1day' }],
//             [{ text: '‚ù§Ô∏è –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –º–µ—Å—è—Ü (2000üåü)', callback_data: 'buy_1month' }],
//             [{ text: 'üí´ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–≤—Å–µ–≥–¥–∞ (10000üåü)', callback_data: 'buy_forever' }]
//           ]
//         }
//       });
//     }
//   });

//   // 3. –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ (–∏—Å–ø–æ–ª—å–∑—É–µ–º invoice –±–µ–∑ provider_token)
//   bot.action('buy_1day', async (ctx) => {
//     try {
//       await ctx.replyWithInvoice({
//         title: '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 1 –¥–µ–Ω—å',
//         description: '–î–æ—Å—Ç—É–ø –Ω–∞ 24 —á–∞—Å–∞',
//         payload: `1day_${ctx.from.id}_${Date.now()}`,
//         currency: 'XTR',
//         prices: [{ label: '1 –¥–µ–Ω—å', amount: 1 }],
//         start_parameter: '1day_sub'
//       });
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞:', error);
//       await ctx.reply('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞');
//     }
//   });

//   bot.action('buy_1month', async (ctx) => {
//     try {
//       await ctx.replyWithInvoice({
//         title: '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 1 –º–µ—Å—è—Ü',
//         description: '–î–æ—Å—Ç—É–ø –Ω–∞ 30 –¥–Ω–µ–π',
//         payload: `1month_${ctx.from.id}_${Date.now()}`,
//         currency: 'XTR',
//         prices: [{ label: '1 –º–µ—Å—è—Ü', amount: 2000 }],
//         start_parameter: '1month_sub'
//       });
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞:', error);
//       await ctx.reply('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞');
//     }
//   });

//   bot.action('buy_forever', async (ctx) => {
//     try {
//       await ctx.replyWithInvoice({
//         title: '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞–≤—Å–µ–≥–¥–∞',
//         description: '–ü–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø',
//         payload: `forever_${ctx.from.id}_${Date.now()}`,
//         currency: 'XTR',
//         prices: [{ label: '–ù–∞–≤—Å–µ–≥–¥–∞', amount: 10000 }],
//         start_parameter: 'forever_sub'
//       });
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞:', error);
//       await ctx.reply('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞');
//     }
//   });

//   // 4. –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
//   bot.on('pre_checkout_query', (ctx) => ctx.answerPreCheckoutQuery(true));

//   bot.on('successful_payment', async (ctx) => {
//     const userId = ctx.from.id;
//     const payload = ctx.message.successful_payment.invoice_payload;
//     const planId = payload.split('_')[0]; // 1day, 1month, forever

//     try {
//       const subRef = db.collection('subscriptions').doc(userId.toString());
//       const subData = {
//         userId,
//         plan: planId,
//         subscriptionType: planId,
//         startDate: admin.firestore.FieldValue.serverTimestamp(),
//         status: 'active',
//         isActive: true,
//         lastUpdated: admin.firestore.FieldValue.serverTimestamp()
//       };

//       // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º endDate –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫
//       if (planId === '1day') {
//         subData.endDate = admin.firestore.Timestamp.fromDate(new Date(Date.now() + 86400000));
//       } else if (planId === '1month') {
//         subData.endDate = admin.firestore.Timestamp.fromDate(new Date(Date.now() + 2592000000));
//       }

//       await subRef.set(subData, { merge: true });
//       await ctx.reply('‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!');
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞:', error);
//       await ctx.reply('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏');
//     }
//   });
// };

// const admin = require('firebase-admin');

// module.exports = (bot, db) => {
//   // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
//   const checkSubscription = async (userId) => {
//     try {
//       const subRef = db.collection('subscriptions').doc(userId.toString());
//       const doc = await subRef.get();

//       if (!doc.exists) return false;

//       const subData = doc.data();

//       if (subData.subscriptionType === 'forever' && subData.isActive) {
//         return {
//           active: true,
//           type: 'forever',
//           message: 'üéâ –£ –≤–∞—Å –±–µ—Å—Å—Ä–æ—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞!'
//         };
//       }

//       if (subData.endDate && subData.endDate.toDate() > new Date() && subData.isActive) {
//         return {
//           active: true,
//           type: subData.subscriptionType,
//           endDate: subData.endDate.toDate(),
//           message: `‚úÖ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ: ${subData.endDate.toDate().toLocaleString()}`
//         };
//       }

//       return false;
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏:', error);
//       return false;
//     }
//   };

//   // 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–π –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
//   const initCollections = async () => {
//     const collections = ['subscriptions', 'transactions', 'payment_logs'];
//     for (const col of collections) {
//       try {
//         const ref = db.collection(col).doc('init');
//         await ref.set({ _init: true });
//         await ref.delete();
//       } catch (error) {
//         console.log(`–ö–æ–ª–ª–µ–∫—Ü–∏—è ${col} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
//       }
//     }
//   };

//   // 3. –ö–æ–º–∞–Ω–¥–∞ /start —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥–ø–∏—Å–∫–∏
//   bot.start(async (ctx) => {
//     await initCollections();
//     const userId = ctx.from.id;
//     const subscription = await checkSubscription(userId);

//     try {
//       await ctx.replyWithPhoto(
//         {
//           url: 'https://st4.depositphotos.com/2944823/21275/i/450/depositphotos_212755884-stock-photo-fashion-outdoor-photo-group-beautiful.jpg',
//           filename: 'welcome.jpg'
//         },
//         {
//           caption: `üëã<b> –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}!
// –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤ üÖøüÖ¥üÖ∞üÖ≤üÖ¥üíãüÜàüÖæüÜÑüÜÅü•ïüÖ∂üÜÑüÖΩ</b>
// <em>–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥—ë—à—å –∫–∞—Ç–∞–ª–æ–≥ –∞–Ω–∫–µ—Ç —Å–æ –≤—Å–µ–≥–æ –º–∏—Ä–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è, —Ñ–ª–∏—Ä—Ç–∞ –∏ —Å–µ—Ä—å—ë–∑–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π.
// üéâ –ö–∞—Ç–∞–ª–æ–≥ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî –≤—Å–µ–≥–¥–∞ —Å–≤–µ–∂–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏!
// –ù–∞—á–Ω–∏ –ø–æ–∏—Å–∫ –∏–ª–∏ —Ä–∞–∑–º–µ—Å—Ç–∏ —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, —Ç–≤–æ—è –≤—Ç–æ—Ä–∞—è –ø–æ–ª–æ–≤–∏–Ω–∫–∞ —É–∂–µ –∑–¥–µ—Å—å!</em>

// ${subscription ? `\n\n${subscription.message}` : ''}`,
//           parse_mode: 'HTML',
//           reply_markup: {
//             inline_keyboard: [
//               [{ text: 'üë©‚Äçü¶∞ –ê–Ω–∫–µ—Ç—ã PeaceYourGun ü•ï', callback_data: 'show_profiles' }],
//               // [{ text: 'üåê –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ PeaceYourGun ü•ï', url: process.env.WEBAPP_URL }],
//               [{ text: 'üî• –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –¥–µ–Ω—å (1üåü)', callback_data: 'buy_1day' }],
//               [{ text: '‚ù§Ô∏è –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –º–µ—Å—è—Ü (2000üåü)', callback_data: 'buy_1month' }],
//               [{ text: 'üí´ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–≤—Å–µ–≥–¥–∞ (10000üåü)', callback_data: 'buy_forever' }]
//             ]
//           }
//         }
//       );
//     } catch (e) {
//       console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ:', e);
//       await ctx.reply(`üëã<b> –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}!
// –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤</b> +
// <b>–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥—ë—à—å –∫–∞—Ç–∞–ª–æ–≥ –∞–Ω–∫–µ—Ç —Å–æ –≤—Å–µ–≥–æ –º–∏—Ä–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è, —Ñ–ª–∏—Ä—Ç–∞ –∏ —Å–µ—Ä—å—ë–∑–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π.
// üéâ –ö–∞—Ç–∞–ª–æ–≥ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî –≤—Å–µ–≥–¥–∞ —Å–≤–µ–∂–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏!
// –ù–∞—á–Ω–∏ –ø–æ–∏—Å–∫ –∏–ª–∏ —Ä–∞–∑–º–µ—Å—Ç–∏ —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, —Ç–≤–æ—è –≤—Ç–æ—Ä–∞—è –ø–æ–ª–æ–≤–∏–Ω–∫–∞ —É–∂–µ –∑–¥–µ—Å—å!
// ‚ö† –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ —Ç–µ–±–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 18+</b>
// ${subscription ? `\n\n${subscription.message}` : ''}`, {
//         parse_mode: 'HTML',
//         reply_markup: {
//           inline_keyboard: [
//             [{ text: 'üë©‚Äçü¶∞ –ê–Ω–∫–µ—Ç—ã PeaceYourGun ü•ï', callback_data: 'show_profiles' }],
//             // [{ text: 'üåê –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ PeaceYourGun ü•ï', url: process.env.WEBAPP_URL }],
//             [{ text: 'üî• –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –¥–µ–Ω—å (1üåü)', callback_data: 'buy_1day' }],
//             [{ text: '‚ù§Ô∏è –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –º–µ—Å—è—Ü (2000üåü)', callback_data: 'buy_1month' }],
//             [{ text: 'üí´ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–≤—Å–µ–≥–¥–∞ (10000üåü)', callback_data: 'buy_forever' }]
//           ]
//         }
//       });
//     }
//   });

//   // 4. –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
//   const handleSubscriptionPurchase = async (ctx, planId, amount, duration) => {
//     try {
//       await ctx.replyWithInvoice({
//         title: `–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ ${planId === '1day' ? '1 –¥–µ–Ω—å' : planId === '1month' ? '1 –º–µ—Å—è—Ü' : '–Ω–∞–≤—Å–µ–≥–¥–∞'}`,
//         description: planId === '1day' ? '–î–æ—Å—Ç—É–ø –Ω–∞ 24 —á–∞—Å–∞' :
//                      planId === '1month' ? '–î–æ—Å—Ç—É–ø –Ω–∞ 30 –¥–Ω–µ–π' : '–ü–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø',
//         payload: `${planId}_${ctx.from.id}_${Date.now()}`,
//         currency: 'XTR',
//         prices: [{ label: '–ü–æ–¥–ø–∏—Å–∫–∞', amount: amount }],
//         start_parameter: `${planId}_sub`
//       });
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞:', error);
//       await ctx.reply('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞');
//     }
//   };

//   bot.action('buy_1day', (ctx) => handleSubscriptionPurchase(ctx, '1day', 1, 86400000));
//   bot.action('buy_1month', (ctx) => handleSubscriptionPurchase(ctx, '1month', 2000, 2592000000));
//   bot.action('buy_forever', (ctx) => handleSubscriptionPurchase(ctx, 'forever', 10000, null));

//   // 5. –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
//   bot.on('pre_checkout_query', (ctx) => ctx.answerPreCheckoutQuery(true));

//   bot.on('successful_payment', async (ctx) => {
//     const userId = ctx.from.id;
//     const payment = ctx.message.successful_payment;
//     const [planId, _] = payment.invoice_payload.split('_');

//     try {
//       // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É
//       const subRef = db.collection('subscriptions').doc(userId.toString());
//       const subData = {
//         userId,
//         plan: planId,
//         subscriptionType: planId,
//         startDate: admin.firestore.FieldValue.serverTimestamp(),
//         status: 'active',
//         isActive: true,
//         lastUpdated: admin.firestore.FieldValue.serverTimestamp()
//       };

//       if (planId === '1day') {
//         subData.endDate = admin.firestore.Timestamp.fromDate(new Date(Date.now() + 86400000));
//       } else if (planId === '1month') {
//         subData.endDate = admin.firestore.Timestamp.fromDate(new Date(Date.now() + 2592000000));
//       }

//       await subRef.set(subData, { merge: true });

//       // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
//       const txRef = db.collection('transactions').doc();
//       await txRef.set({
//         userId,
//         amount: payment.total_amount / 100,
//         plan: planId,
//         status: 'completed',
//         paymentId: payment.telegram_payment_charge_id,
//         timestamp: admin.firestore.FieldValue.serverTimestamp()
//       });

//       // –õ–æ–≥–∏—Ä—É–µ–º –ø–ª–∞—Ç–µ–∂
//       const logRef = db.collection('payment_logs').doc();
//       await logRef.set({
//         userId,
//         amount: payment.total_amount / 100,
//         plan: planId,
//         date: new Date().toISOString(),
//         paymentDetails: payment
//       });

//       await ctx.reply('‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!');
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞:', error);
//       await ctx.reply('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏');
//     }
//   });
// };

//start.js
// const admin = require('firebase-admin');

// module.exports = (bot, db) => {
//   // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
//   const checkSubscription = async (userId) => {
//     try {
//       const subRef = db.collection('subscriptions').doc(userId.toString());
//       const doc = await subRef.get();

//       if (!doc.exists) return false;

//       const subData = doc.data();

//       if (subData.subscriptionType === 'forever' && subData.isActive) {
//         return {
//           active: true,
//           type: 'forever',
//           message: 'üéâ –£ –≤–∞—Å –±–µ—Å—Å—Ä–æ—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞!'
//         };
//       }

//       if (subData.endDate && subData.endDate.toDate() > new Date() && subData.isActive) {
//         return {
//           active: true,
//           type: subData.subscriptionType,
//           endDate: subData.endDate.toDate(),
//           message: `‚úÖ <b>–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ:</b> ${subData.endDate.toDate().toLocaleString()}`
//         };
//       }

//       return false;
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏:', error);
//       return false;
//     }
//   };

//   // 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–π –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
//   const initCollections = async () => {
//     const collections = ['subscriptions', 'transactions', 'payment_logs'];
//     for (const col of collections) {
//       try {
//         const ref = db.collection(col).doc('init');
//         await ref.set({ _init: true });
//         await ref.delete();
//       } catch (error) {
//         console.log(`–ö–æ–ª–ª–µ–∫—Ü–∏—è ${col} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
//       }
//     }
//   };

//   // 3. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —ç–∫—Ä–∞–Ω–∞
//   const clearChat = async (ctx) => {
//     try {
//       // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ 10 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö)
//       const chatId = ctx.chat.id;
//       const messageId = ctx.message.message_id;

//       // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
//       await ctx.deleteMessage();

//       // –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
//       for (let i = 1; i <= 10; i++) {
//         try {
//           await ctx.telegram.deleteMessage(chatId, messageId - i);
//         } catch (e) {
//           // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ (–µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
//         }
//       }

//       // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —á–∏—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
//       return true;
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —á–∞—Ç–∞:', error);
//       return false;
//     }
//   };
// //<b>‚ö†üö® –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ —Ç–µ–±–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 18+‚ùó</b>
//   // 4. –ö–æ–º–∞–Ω–¥–∞ /start —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥–ø–∏—Å–∫–∏
//   bot.start(async (ctx) => {
//     await initCollections();
//     const userId = ctx.from.id;
//     const subscription = await checkSubscription(userId);

//     try {
//       await ctx.replyWithPhoto(
//         {
//           url: 'https://st4.depositphotos.com/2944823/21275/i/450/depositphotos_212755884-stock-photo-fashion-outdoor-photo-group-beautiful.jpg',
//           filename: 'welcome.jpg'
//         },
//         {
//           caption: `üëã<b> –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}!
// –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤ üÖøüÖ¥üÖ∞üÖ≤üÖ¥üíãüÜàüÖæüÜÑüÜÅü•ïüÖ∂üÜÑüÖΩ</b>
// <em>–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥—ë—à—å –∫–∞—Ç–∞–ª–æ–≥ –∞–Ω–∫–µ—Ç —Å–æ –≤—Å–µ–≥–æ –º–∏—Ä–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è, —Ñ–ª–∏—Ä—Ç–∞ –∏ —Å–µ—Ä—å—ë–∑–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π.
// üéâ –ö–∞—Ç–∞–ª–æ–≥ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî –≤—Å–µ–≥–¥–∞ —Å–≤–µ–∂–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏!
// –ù–∞—á–Ω–∏ –ø–æ–∏—Å–∫ –∏–ª–∏ —Ä–∞–∑–º–µ—Å—Ç–∏ —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, —Ç–≤–æ—è –≤—Ç–æ—Ä–∞—è –ø–æ–ª–æ–≤–∏–Ω–∫–∞ —É–∂–µ –∑–¥–µ—Å—å!</em>

// ${subscription ? `\n\n${subscription.message}` : ''}`,
//           parse_mode: 'HTML',
//           reply_markup: {
//             inline_keyboard: [
//               [{ text: 'üë©‚Äçü¶∞ –ê–Ω–∫–µ—Ç—ã PeaceYourGun ü•ï', callback_data: 'show_profiles' }],
//               [{ text: 'üî• –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –¥–µ–Ω—å (1üåü)', callback_data: 'buy_1day' }],
//               [{ text: '‚ù§Ô∏è –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –º–µ—Å—è—Ü (2000üåü)', callback_data: 'buy_1month' }],
//               [{ text: 'üí´ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–≤—Å–µ–≥–¥–∞ (10000üåü)', callback_data: 'buy_forever' }]
//             ]
//           }
//         }
//       );
//     } catch (e) {
//       console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ:', e);
//       await ctx.reply(`üëã<b> –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}!
// –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤</b> +
// <b>–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥—ë—à—å –∫–∞—Ç–∞–ª–æ–≥ –∞–Ω–∫–µ—Ç —Å–æ –≤—Å–µ–≥–æ –º–∏—Ä–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è, —Ñ–ª–∏—Ä—Ç–∞ –∏ —Å–µ—Ä—å—ë–∑–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π.
// üéâ –ö–∞—Ç–∞–ª–æ–≥ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî –≤—Å–µ–≥–¥–∞ —Å–≤–µ–∂–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏!
// –ù–∞—á–Ω–∏ –ø–æ–∏—Å–∫ –∏–ª–∏ —Ä–∞–∑–º–µ—Å—Ç–∏ —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, —Ç–≤–æ—è –≤—Ç–æ—Ä–∞—è –ø–æ–ª–æ–≤–∏–Ω–∫–∞ —É–∂–µ –∑–¥–µ—Å—å!
// ‚ö† –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ —Ç–µ–±–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 18+</b>
// ${subscription ? `\n\n${subscription.message}` : ''}`, {
//         parse_mode: 'HTML',
//         reply_markup: {
//           inline_keyboard: [
//             [{ text: 'üë©‚Äçü¶∞ –ê–Ω–∫–µ—Ç—ã PeaceYourGun ü•ï', callback_data: 'show_profiles' }],
//             [{ text: 'üî• –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –¥–µ–Ω—å (1üåü)', callback_data: 'buy_1day' }],
//             [{ text: '‚ù§Ô∏è –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –º–µ—Å—è—Ü (2000üåü)', callback_data: 'buy_1month' }],
//             [{ text: 'üí´ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–≤—Å–µ–≥–¥–∞ (10000üåü)', callback_data: 'buy_forever' }]
//           ]
//         }
//       });
//     }
//   });

//   // 5. –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
//   const handleSubscriptionPurchase = async (ctx, planId, amount, duration) => {
//     try {
//       await ctx.replyWithInvoice({
//         title: `–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ ${planId === '1day' ? '1 –¥–µ–Ω—å' : planId === '1month' ? '1 –º–µ—Å—è—Ü' : '–Ω–∞–≤—Å–µ–≥–¥–∞'}`,
//         description: planId === '1day' ? '–î–æ—Å—Ç—É–ø –Ω–∞ 24 —á–∞—Å–∞' :
//                      planId === '1month' ? '–î–æ—Å—Ç—É–ø –Ω–∞ 30 –¥–Ω–µ–π' : '–ü–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø',
//         payload: `${planId}_${ctx.from.id}_${Date.now()}`,
//         currency: 'XTR',
//         prices: [{ label: '–ü–æ–¥–ø–∏—Å–∫–∞', amount: amount }],
//         start_parameter: `${planId}_sub`
//       });
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞:', error);
//       await ctx.reply('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞');
//     }
//   };

//   bot.action('buy_1day', (ctx) => handleSubscriptionPurchase(ctx, '1day', 1, 86400000));
//   bot.action('buy_1month', (ctx) => handleSubscriptionPurchase(ctx, '1month', 2000, 2592000000));
//   bot.action('buy_forever', (ctx) => handleSubscriptionPurchase(ctx, 'forever', 10000, null));

//   // 6. –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
//   bot.on('pre_checkout_query', (ctx) => ctx.answerPreCheckoutQuery(true));

//   bot.on('successful_payment', async (ctx) => {
//     const userId = ctx.from.id;
//     const payment = ctx.message.successful_payment;
//     const [planId, _] = payment.invoice_payload.split('_');

//     try {
//       // –û—á–∏—â–∞–µ–º —ç–∫—Ä–∞–Ω –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
//       await clearChat(ctx);

//       // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É
//       const subRef = db.collection('subscriptions').doc(userId.toString());
//       const subData = {
//         userId,
//         plan: planId,
//         subscriptionType: planId,
//         startDate: admin.firestore.FieldValue.serverTimestamp(),
//         status: 'active',
//         isActive: true,
//         lastUpdated: admin.firestore.FieldValue.serverTimestamp()
//       };

//       if (planId === '1day') {
//         subData.endDate = admin.firestore.Timestamp.fromDate(new Date(Date.now() + 86400000));
//       } else if (planId === '1month') {
//         subData.endDate = admin.firestore.Timestamp.fromDate(new Date(Date.now() + 2592000000));
//       }

//       await subRef.set(subData, { merge: true });

//       // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
//       const txRef = db.collection('transactions').doc();
//       await txRef.set({
//         userId,
//         amount: payment.total_amount / 100,
//         plan: planId,
//         status: 'completed',
//         paymentId: payment.telegram_payment_charge_id,
//         timestamp: admin.firestore.FieldValue.serverTimestamp()
//       });

//       // –õ–æ–≥–∏—Ä—É–µ–º –ø–ª–∞—Ç–µ–∂
//       const logRef = db.collection('payment_logs').doc();
//       await logRef.set({
//         userId,
//         amount: payment.total_amount / 100,
//         plan: planId,
//         date: new Date().toISOString(),
//         paymentDetails: payment
//       });

//       // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
//       const subscription = await checkSubscription(userId);
//       await ctx.replyWithPhoto(
//         {
//           url: 'https://st4.depositphotos.com/2944823/21275/i/450/depositphotos_212755884-stock-photo-fashion-outdoor-photo-group-beautiful.jpg',
//           filename: 'welcome.jpg'
//         },
//         {
//           caption: `‚úÖ <b>–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!</b>\n\n${subscription.message}`,
//           parse_mode: 'HTML',
//           reply_markup: {
//             inline_keyboard: [
//               [{ text: 'üë©‚Äçü¶∞ –ê–Ω–∫–µ—Ç—ã PeaceYourGun ü•ï', callback_data: 'show_profiles' }]
//             ]
//           }
//         }
//       );
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞:', error);
//       await ctx.reply('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏');
//     }
//   });
// };

// const admin = require('firebase-admin');
// const fs = require('fs');
// const path = require('path');

// module.exports = (bot, db) => {
//     // ================= 1. –ü–†–ï–î–ó–ê–ì–†–£–ó–ö–ê –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø =================
//     const welcomeImage = {
//         path: path.join(__dirname, '../../img/welcome.jpg'),
//         buffer: null,
//         fileId: null,
//         load: function() {
//             if (fs.existsSync(this.path)) {
//                 this.buffer = fs.readFileSync(this.path);
//                 console.log('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ welcome.jpg –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ –ø–∞–º—è—Ç—å');
//             }
//         }
//     };
//     welcomeImage.load();

//     // ================= 2. –û–†–ò–ì–ò–ù–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô =================
//     // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ (–ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞)
//    const checkSubscription = async (userId, db) => {
//     try {
//         const subRef = db.collection('subscriptions').doc(userId.toString());
//         const doc = await subRef.get();

//         if (!doc.exists) return false;

//         const subData = doc.data();
//         return subData.isActive && subData.endDate.toDate() > new Date();
//     } catch (error) {
//         console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏:', error);
//         return false;
//     }
// };

//     // 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–π (–ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞)
//     const initCollections = async () => {
//         const collections = ['subscriptions', 'transactions', 'payment_logs'];
//         for (const col of collections) {
//             try {
//                 const ref = db.collection(col).doc('init');
//                 await ref.set({ _init: true });
//                 await ref.delete();
//             } catch (error) {
//                 console.log(`–ö–æ–ª–ª–µ–∫—Ü–∏—è ${col} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
//             }
//         }
//     };

//     // 3. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —ç–∫—Ä–∞–Ω–∞ (–ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞)
//     const clearChat = async (ctx) => {
//         try {
//             const chatId = ctx.chat.id;
//             const messageId = ctx.message.message_id;

//             await ctx.deleteMessage();

//             for (let i = 1; i <= 10; i++) {
//                 try {
//                     await ctx.telegram.deleteMessage(chatId, messageId - i);
//                 } catch (e) {}
//             }

//             return true;
//         } catch (error) {
//             console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —á–∞—Ç–∞:', error);
//             return false;
//         }
//     };

//     // ================= 3. –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ô START =================
// //     bot.start(async (ctx) => {
// //         // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏ (–Ω–µ –∂–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è)
// //         initCollections().catch(e => console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', e));

// //         const userId = ctx.from.id;
// //         const welcomeText = `üëã<b> –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}!
// // –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤ üÖøüÖ¥üÖ∞üÖ≤üÖ¥üíãüÜàüÖæüÜÑüÜÅü•ïüÖ∂üÜÑüÖΩ</b>
// // <em>–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥—ë—à—å –∫–∞—Ç–∞–ª–æ–≥ –∞–Ω–∫–µ—Ç —Å–æ –≤—Å–µ–≥–æ –º–∏—Ä–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è, —Ñ–ª–∏—Ä—Ç–∞ –∏ —Å–µ—Ä—å—ë–∑–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π.
// // üéâ –ö–∞—Ç–∞–ª–æ–≥ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî –≤—Å–µ–≥–¥–∞ —Å–≤–µ–∂–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏!
// // –ù–∞—á–Ω–∏ –ø–æ–∏—Å–∫ –∏–ª–∏ —Ä–∞–∑–º–µ—Å—Ç–∏ —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, —Ç–≤–æ—è –≤—Ç–æ—Ä–∞—è –ø–æ–ª–æ–≤–∏–Ω–∫–∞ —É–∂–µ –∑–¥–µ—Å—å!</em>`;
// //  const hasSub = await checkSubscription(userId, db);
// //         // 1. –°–Ω–∞—á–∞–ª–∞ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
// //         try {
// //             if (welcomeImage.fileId) {
// //                 await ctx.replyWithPhoto(
// //                     welcomeImage.fileId,
// //                     {
// //                         caption: welcomeText,
// //                         parse_mode: 'HTML',
// //                         reply_markup: {
// //                             inline_keyboard: [
// // // [{ text: 'üåç –í—Å–µ —Å—Ç—Ä–∞–Ω—ã', callback_data: 'all_countries' }],
// //                                 // [{ text: 'üë©‚Äçü¶∞ –ê–Ω–∫–µ—Ç—ã PeaceYourGun ü•ï', callback_data: 'show_profiles' }],
// //                                  [{
// //     text: 'üåê –û—Ç–∫—Ä—ã—Ç—å  PeaceYourGun ü•ï –≤ WebApp',
// //     web_app: { url: process.env.WEBAPP_URL }
// // }],
// //                                 [{ text: 'üî• –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –¥–µ–Ω—å (1üåü)', callback_data: 'buy_1day' }],
// //                                 [{ text: '‚ù§Ô∏è –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –º–µ—Å—è—Ü (2000üåü)', callback_data: 'buy_1month' }],
// //                                 [{ text: 'üí´ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–≤—Å–µ–≥–¥–∞ (10000üåü)', callback_data: 'buy_forever' }]
// //                             ]
// //                         }
// //                     }
// //                 );
// //             } else if (welcomeImage.buffer) {
// //                 const msg = await ctx.replyWithPhoto(
// //                     { source: welcomeImage.buffer },
// //                     {
// //                         caption: welcomeText,
// //                         parse_mode: 'HTML',
// //                         reply_markup: {
// //                             inline_keyboard: [
// // // [{ text: 'üåç –í—Å–µ —Å—Ç—Ä–∞–Ω—ã', callback_data: 'all_countries' }],
// //                                 // [{ text: 'üë©‚Äçü¶∞ –ê–Ω–∫–µ—Ç—ã PeaceYourGun ü•ï', callback_data: 'show_profiles' }],
// //                                  [{
// //     text: 'üåê –û—Ç–∫—Ä—ã—Ç—å  PeaceYourGun ü•ï –≤ WebApp',
// //     web_app: { url: process.env.WEBAPP_URL }
// // }],
// //                                 [{ text: 'üî• –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –¥–µ–Ω—å (1üåü)', callback_data: 'buy_1day' }],
// //                                 [{ text: '‚ù§Ô∏è –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –º–µ—Å—è—Ü (2000üåü)', callback_data: 'buy_1month' }],
// //                                 [{ text: 'üí´ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–≤—Å–µ–≥–¥–∞ (10000üåü)', callback_data: 'buy_forever' }]
// //                             ]
// //                         }
// //                     }
// //                 );
// //                 welcomeImage.fileId = msg.photo[0].file_id;
// //             } else {
// //                 await ctx.reply(welcomeText, {
// //                     parse_mode: 'HTML',
// //                     reply_markup: {
// //                         inline_keyboard: [
// //                             // [{ text: 'üåç –í—Å–µ —Å—Ç—Ä–∞–Ω—ã', callback_data: 'all_countries' }],
// //                             // [{ text: 'üë©‚Äçü¶∞ –ê–Ω–∫–µ—Ç—ã PeaceYourGun ü•ï', callback_data: 'show_profiles' }],
// //                               [{
// //     text: 'üåê –û—Ç–∫—Ä—ã—Ç—å  PeaceYourGun ü•ï –≤ WebApp',
// //     web_app: { url: process.env.WEBAPP_URL }
// // }],
// //                             [{ text: 'üî• –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –¥–µ–Ω—å (1üåü)', callback_data: 'buy_1day' }],
// //                             [{ text: '‚ù§Ô∏è –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –º–µ—Å—è—Ü (2000üåü)', callback_data: 'buy_1month' }],
// //                             [{ text: 'üí´ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–≤—Å–µ–≥–¥–∞ (10000üåü)', callback_data: 'buy_forever' }]
// //                         ]
// //                     }
// //                 });
// //             }
// //         } catch (e) {
// //             console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ welcome:', e);
// //             await ctx.reply(welcomeText, {
// //                 parse_mode: 'HTML',
// //                 reply_markup: {
// //                     inline_keyboard: [
// //                         // [{ text: 'üë©‚Äçü¶∞ –ê–Ω–∫–µ—Ç—ã PeaceYourGun ü•ï', callback_data: 'show_profiles' }],
// //                         [{ text: 'üî• –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –¥–µ–Ω—å (1üåü)', callback_data: 'buy_1day' }],
// //                         [{ text: '‚ù§Ô∏è –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –º–µ—Å—è—Ü (2000üåü)', callback_data: 'buy_1month' }],
// //                         [{ text: 'üí´ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–≤—Å–µ–≥–¥–∞ (10000üåü)', callback_data: 'buy_forever' }]
// //                     ]
// //                 }
// //             });
// //         }

// //         // 2. –ó–∞—Ç–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
// //         setTimeout(async () => {
// //             try {
// //                 const subscription = await checkSubscription(userId);
// //                 if (subscription) {
// //                     await ctx.reply(subscription.message, { parse_mode: 'HTML' });
// //                 }
// //             } catch (e) {
// //                 console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏:', e);
// //             }
// //         }, 0);
// //     });

//     // ================= 4. –û–†–ò–ì–ò–ù–ê–õ–¨–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô =================
//     const handleSubscriptionPurchase = async (ctx, planId, amount, duration) => {
//         try {
//             await ctx.replyWithInvoice({
//                 title: `–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ ${planId === '1day' ? '1 –¥–µ–Ω—å' : planId === '1month' ? '1 –º–µ—Å—è—Ü' : '–Ω–∞–≤—Å–µ–≥–¥–∞'}`,
//                 description: planId === '1day' ? '–î–æ—Å—Ç—É–ø –Ω–∞ 24 —á–∞—Å–∞' :
//                             planId === '1month' ? '–î–æ—Å—Ç—É–ø –Ω–∞ 30 –¥–Ω–µ–π' : '–ü–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø',
//                 payload: `${planId}_${ctx.from.id}_${Date.now()}`,
//                 currency: 'XTR',
//                 prices: [{ label: '–ü–æ–¥–ø–∏—Å–∫–∞', amount: amount }],
//                 start_parameter: `${planId}_sub`
//             });
//         } catch (error) {
//             console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞:', error);
//             await ctx.reply('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞');
//         }
//     };

//     bot.action('buy_1day', (ctx) => handleSubscriptionPurchase(ctx, '1day', 1, 86400000));
//     bot.action('buy_1month', (ctx) => handleSubscriptionPurchase(ctx, '1month', 2000, 2592000000));
//     bot.action('buy_forever', (ctx) => handleSubscriptionPurchase(ctx, 'forever', 10000, null));

//     bot.on('pre_checkout_query', (ctx) => ctx.answerPreCheckoutQuery(true));

//     bot.on('successful_payment', async (ctx) => {
//         const userId = ctx.from.id;
//         const payment = ctx.message.successful_payment;
//         const [planId, _] = payment.invoice_payload.split('_');

//         try {
//             await clearChat(ctx);

//             const subRef = db.collection('subscriptions').doc(userId.toString());
//             const subData = {
//                 userId,
//                 plan: planId,
//                 subscriptionType: planId,
//                 startDate: admin.firestore.FieldValue.serverTimestamp(),
//                 status: 'active',
//                 isActive: true,
//                 lastUpdated: admin.firestore.FieldValue.serverTimestamp()
//             };

//             if (planId === '1day') {
//                 subData.endDate = admin.firestore.Timestamp.fromDate(new Date(Date.now() + 86400000));
//             } else if (planId === '1month') {
//                 subData.endDate = admin.firestore.Timestamp.fromDate(new Date(Date.now() + 2592000000));
//             }

//             await subRef.set(subData, { merge: true });

//             const txRef = db.collection('transactions').doc();
//             await txRef.set({
//                 userId,
//                 amount: payment.total_amount / 100,
//                 plan: planId,
//                 status: 'completed',
//                 paymentId: payment.telegram_payment_charge_id,
//                 timestamp: admin.firestore.FieldValue.serverTimestamp()
//             });

//             const logRef = db.collection('payment_logs').doc();
//             await logRef.set({
//                 userId,
//                 amount: payment.total_amount / 100,
//                 plan: planId,
//                 date: new Date().toISOString(),
//                 paymentDetails: payment
//             });

//             const subscription = await checkSubscription(userId);
//             if (welcomeImage.fileId) {
//                 await ctx.replyWithPhoto(
//                     welcomeImage.fileId,
//                     {
//                         caption: `‚úÖ <b>–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!</b>\n\n${subscription.message}`,
//                         parse_mode: 'HTML',
//                         reply_markup: {
//                             inline_keyboard: [
//                                 [{ text: 'üåç –í—Å–µ —Å—Ç—Ä–∞–Ω—ã', callback_data: 'all_countries' }],
//                                 // [{ text: 'üë©‚Äçü¶∞ –ê–Ω–∫–µ—Ç—ã PeaceYourGun ü•ï', callback_data: 'show_profiles' }]
//                             ]
//                         }
//                     }
//                 );
//             } else if (welcomeImage.buffer) {
//                 const msg = await ctx.replyWithPhoto(
//                     { source: welcomeImage.buffer },
//                     {
//                         caption: `‚úÖ <b>–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!</b>\n\n${subscription.message}`,
//                         parse_mode: 'HTML',
//                         reply_markup: {
//                             inline_keyboard: [
//                                 [{ text: 'üë©‚Äçü¶∞ –ê–Ω–∫–µ—Ç—ã PeaceYourGun ü•ï', callback_data: 'show_profiles' }]
//                             ]
//                         }
//                     }
//                 );
//                 welcomeImage.fileId = msg.photo[0].file_id;
//             } else {
//                 await ctx.reply(`‚úÖ <b>–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!</b>\n\n${subscription.message}`, {
//                     parse_mode: 'HTML',
//                     reply_markup: {
//                         inline_keyboard: [
//                             [{ text: 'üë©‚Äçü¶∞ –ê–Ω–∫–µ—Ç—ã PeaceYourGun ü•ï', callback_data: 'show_profiles' }]
//                         ]
//                     }
//                 });
//             }
//         } catch (error) {
//             console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞:', error);
//             await ctx.reply('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏');
//         }
//     });
// };
const admin = require("firebase-admin");
const fs = require("fs");
const path = require("path");

module.exports = (bot, db) => {
  // ================= 1. –ü–†–ï–î–ó–ê–ì–†–£–ó–ö–ê –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø =================
  const welcomeImage = {
    path: path.join(__dirname, "../../img/welcome.jpg"),
    buffer: null,
    fileId: null,
    load: function () {
      if (fs.existsSync(this.path)) {
        this.buffer = fs.readFileSync(this.path);
        console.log("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ welcome.jpg –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ –ø–∞–º—è—Ç—å");
      }
    },
  };
  welcomeImage.load();

  // ================= 2. –§–£–ù–ö–¶–ò–Ø –ü–†–û–í–ï–†–ö–ò –ü–û–î–ü–ò–°–ö–ò =================
  const checkSubscription = async (userId) => {
    try {
      const subRef = db.collection("subscriptions").doc(userId.toString());
      const doc = await subRef.get();

      if (!doc.exists) return false;

      const subData = doc.data();
      return {
        active: subData.isActive && subData.endDate.toDate() > new Date(),
        message:
          subData.subscriptionType === "forever"
            ? "üéâ –£ –≤–∞—Å –±–µ—Å—Å—Ä–æ—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞!"
            : `‚úÖ  –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ: ${subData.endDate
                .toDate()
                .toLocaleString()}`,
      };
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏:", error);
      return { active: false };
    }
  };

  // ================= 3. –û–†–ò–ì–ò–ù–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò =================
  const initCollections = async () => {
    const collections = ["subscriptions", "transactions", "payment_logs"];
    for (const col of collections) {
      try {
        const ref = db.collection(col).doc("init");
        await ref.set({ _init: true });
        await ref.delete();
      } catch (error) {
        console.log(`–ö–æ–ª–ª–µ–∫—Ü–∏—è ${col} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
      }
    }
  };

  const clearChat = async (ctx) => {
    try {
      const chatId = ctx.chat.id;
      const messageId = ctx.message.message_id;

      await ctx.deleteMessage();

      for (let i = 1; i <= 10; i++) {
        try {
          await ctx.telegram.deleteMessage(chatId, messageId - i);
        } catch (e) {}
      }

      return true;
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —á–∞—Ç–∞:", error);
      return false;
    }
  };

  // ================= 4. –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö START =================
  bot.start(async (ctx) => {
    initCollections().catch((e) => console.error("–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:", e));

    const userId = ctx.from.id;
    const welcomeText = `üëã<b> –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}!
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –≠—Å–∫–æ—Ä—Çüíã –ë–ª–æ–∫–Ω–æ—Çü•ï</b> 
<em>–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥—ë—à—å –∫–∞—Ç–∞–ª–æ–≥ –∞–Ω–∫–µ—Ç —Å–æ –≤—Å–µ–≥–æ –º–∏—Ä–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è, —Ñ–ª–∏—Ä—Ç–∞ –∏ —Å–µ—Ä—å—ë–∑–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π.
üéâ –ö–∞—Ç–∞–ª–æ–≥ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî –≤—Å–µ–≥–¥–∞ —Å–≤–µ–∂–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏!
–ù–∞—á–Ω–∏ –ø–æ–∏—Å–∫ –∏–ª–∏ —Ä–∞–∑–º–µ—Å—Ç–∏ —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, —Ç–≤–æ—è –≤—Ç–æ—Ä–∞—è –ø–æ–ª–æ–≤–∏–Ω–∫–∞ —É–∂–µ –∑–¥–µ—Å—å!</em>`;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É —Å—Ä–∞–∑—É
    const subscription = await checkSubscription(userId);
    const hasSub = subscription.active;

    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    const baseKeyboard = [
      // [
      //   {
      //     text: "üåê –û—Ç–∫—Ä—ã—Ç—å PeaceYourGun ü•ï –≤ WebApp",
      //     web_app: { url: process.env.WEBAPP_URL },
      //   },
      // ],
    ];

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–í—Å–µ —Å—Ç—Ä–∞–Ω—ã" —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
    if (hasSub) {
      baseKeyboard.push([
        { text: "üåç –í—Å–µ —Å—Ç—Ä–∞–Ω—ã", callback_data: "all_countries" },
      ]);
    }

    // –ö–Ω–æ–ø–∫–∏ –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
    baseKeyboard.push(
      [
        {
          text: "üî• –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –¥–µ–Ω—å (199üåü)",
          callback_data: "buy_1day",
        },
      ],
      [
        {
          text: "‚ù§Ô∏è –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –º–µ—Å—è—Ü (599üåü)",
          callback_data: "buy_1month",
        },
      ],
      // [
      //   {
      //     text: "üí´ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–≤—Å–µ–≥–¥–∞ (10000üåü)",
      //     callback_data: "buy_forever",
      //   },
      // ]
    );

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    try {
      if (welcomeImage.fileId) {
        await ctx.replyWithPhoto(welcomeImage.fileId, {
          caption: welcomeText,
          parse_mode: "HTML",
          reply_markup: { inline_keyboard: baseKeyboard },
        });
      } else if (welcomeImage.buffer) {
        const msg = await ctx.replyWithPhoto(
          { source: welcomeImage.buffer },
          {
            caption: welcomeText,
            parse_mode: "HTML",
            reply_markup: { inline_keyboard: baseKeyboard },
          }
        );
        welcomeImage.fileId = msg.photo[0].file_id;
      } else {
        await ctx.reply(welcomeText, {
          parse_mode: "HTML",
          reply_markup: { inline_keyboard: baseKeyboard },
        });
      }
    } catch (e) {
      console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ welcome:", e);
      await ctx.reply(welcomeText, {
        parse_mode: "HTML",
        reply_markup: { inline_keyboard: baseKeyboard },
      });
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if (hasSub) {
      setTimeout(async () => {
        try {
          await ctx.reply(subscription.message, { parse_mode: "HTML" });
        } catch (e) {
          console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏:", e);
        }
      }, 500);
    }
  });

  // ================= 5. –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ü–û–î–ü–ò–°–û–ö =================
  const handleSubscriptionPurchase = async (ctx, planId, amount, duration) => {
    try {
      await ctx.replyWithInvoice({
        title: `–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ ${
          planId === "1day"
            ? "1 –¥–µ–Ω—å"
            : planId === "1month"
            ? "1 –º–µ—Å—è—Ü"
            : "–Ω–∞–≤—Å–µ–≥–¥–∞"
        }`,
        description:
          planId === "1day"
            ? "–î–æ—Å—Ç—É–ø –Ω–∞ 24 —á–∞—Å–∞"
            : planId === "1month"
            ? "–î–æ—Å—Ç—É–ø –Ω–∞ 30 –¥–Ω–µ–π"
            : "–ü–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø",
        payload: `${planId}_${ctx.from.id}_${Date.now()}`,
        currency: "XTR",
        prices: [{ label: "–ü–æ–¥–ø–∏—Å–∫–∞", amount: amount }],
        start_parameter: `${planId}_sub`,
      });
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞:", error);
      await ctx.reply("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞");
    }
  };

  bot.action("buy_1day", (ctx) =>
    handleSubscriptionPurchase(ctx, "1day", 1, 86400000)
  );
  bot.action("buy_1month", (ctx) =>
    handleSubscriptionPurchase(ctx, "1month", 2000, 2592000000)
  );
  bot.action("buy_forever", (ctx) =>
    handleSubscriptionPurchase(ctx, "forever", 10000, null)
  );

  bot.on("pre_checkout_query", (ctx) => ctx.answerPreCheckoutQuery(true));

  bot.on("successful_payment", async (ctx) => {
    const userId = ctx.from.id;
    const payment = ctx.message.successful_payment;
    const [planId, _] = payment.invoice_payload.split("_");

    try {
      await clearChat(ctx);

      const subRef = db.collection("subscriptions").doc(userId.toString());
      const subData = {
        userId,
        plan: planId,
        subscriptionType: planId,
        startDate: admin.firestore.FieldValue.serverTimestamp(),
        status: "active",
        isActive: true,
        lastUpdated: admin.firestore.FieldValue.serverTimestamp(),
      };

      if (planId === "1day") {
        subData.endDate = admin.firestore.Timestamp.fromDate(
          new Date(Date.now() + 86400000)
        );
      } else if (planId === "1month") {
        subData.endDate = admin.firestore.Timestamp.fromDate(
          new Date(Date.now() + 2592000000)
        );
      }

      await subRef.set(subData, { merge: true });

      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö...

      // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
      const subscription = await checkSubscription(userId);
      const keyboard = [
        // [
        //   {
        //     text: "üåê –û—Ç–∫—Ä—ã—Ç—å PeaceYourGun ü•ï –≤ WebApp",
        //     web_app: { url: process.env.WEBAPP_URL },
        //   },
        // ],
        [{ text: "üåç –í—Å–µ —Å—Ç—Ä–∞–Ω—ã", callback_data: "all_countries" }],
      ];

      await ctx.reply(
        `‚úÖ <b>–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!</b>\n\n${subscription.message}`,
        {
          parse_mode: "HTML",
          reply_markup: { inline_keyboard: keyboard },
        }
      );
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞:", error);
      await ctx.reply("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏");
    }
  });
};
